# docker-compose: 도커 컨테이너 관리
# docker-compose-deploy.yml - 배포용으로 사용
version: "3.11"

# docker-compose: 프론트엔드, 백엔드, DB, NginX
services:
  # 첫번째 컨테이너 : Django
  app:  
    build:
      context: . 
      args:
        - DEV=true
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app
    command: >
      sh -c 'python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000'
    
    restart: on-failure

    environment: # 아래의 변수들은 .env 파일에 저장 (.env)는 커밋하지 않습니다.
      - DB_HOST=db
      - DB_NAME=youtube
      - DB_USER=hyuna12
      - DB_PASS=yung00420
    depends_on: # db 컨테이너 실행 -> app 컨테이너 실행
      - db

  # 두번째 컨테이너: Portgres
  db:
    image: postgres:16-alpine
    # 데이터 저장 공간(./data/db) => (마운트) => /var/lib/postgresql/data
    # docker-compose down
    # 아래의 설명을 통해서 컨테이너가 제거되어도 데이터가 보존된다. 왜? 호스트환경에 저장했기 때문에
    volumes: # 데이터 저장 공간
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=youtube
      - POSTGRES_USER=hyuna12
      - POSTGRES_PASSWORD=yung00420

    # mysql -> postgreSQL
    # Django -> SQL(X) / ORM(O)